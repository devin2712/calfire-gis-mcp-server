name: Test and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: us-east-2
  STACK_NAME: calfire-gis-mcp-server

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            node_modules
            dist
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb', '**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-bun-
            ${{ runner.os }}-

      - name: Install dependencies
        run: bun install

      - name: Run tests
        run: bun test

      - name: Install Bun types
        run: bun add -d @types/bun
    
      - name: Run type check
        run: bun run lint

  deploy:
    needs: test
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
            dist
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json', '**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
            ${{ runner.os }}-

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run deploy:build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install AWS SAM CLI
        uses: aws-actions/setup-sam@v2

      - name: Deploy with SAM
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            npm run deploy:sam:build
            sam deploy --no-fail-on-empty-changeset --no-confirm-changeset \
              --stack-name ${{ env.STACK_NAME }}-pr-${{ github.event.pull_request.number }} \
              --parameter-overrides BudgetEmail=${{ secrets.BUDGET_EMAIL }} || exit 1
          else
            npm run deploy:sam:build
            sam deploy --no-fail-on-empty-changeset --no-confirm-changeset \
              --stack-name ${{ env.STACK_NAME }} \
              --parameter-overrides BudgetEmail=${{ secrets.BUDGET_EMAIL }} || exit 1
          fi 